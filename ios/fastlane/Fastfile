# This file contains the fastlane.tools configuration
default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Ensure we're in the right directory
    setup_ci if ENV['CI']
    
    # Get the latest build number from TestFlight
    api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      is_key_content_base64: true
    )
    
    # Increment build number
    increment_build_number(
      build_number: latest_testflight_build_number(
        api_key: api_key,
        app_identifier: "com.dailypro.shooter"
      ) + 1,
      xcodeproj: "Runner.xcodeproj"
    )
    
    # Sync code signing with match
    if is_ci
      token = ENV['MATCH_GITHUB_TOKEN']
      git_url = "https://#{token}:x-oauth-basic@github.com/dheerajjha/shooter-certificates.git"
      match(
        type: "appstore",
        app_identifier: "com.dailypro.shooter",
        readonly: true,
        git_url: git_url
      )
    else
      match(
        type: "appstore",
        app_identifier: "com.dailypro.shooter",
        readonly: false
      )
    end
    
    # Build the app
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          "com.dailypro.shooter" => "match AppStore com.dailypro.shooter"
        }
      },
      xcargs: "-allowProvisioningUpdates CODE_SIGN_STYLE=Manual DEVELOPMENT_TEAM=83C822A4J3 PROVISIONING_PROFILE_SPECIFIER='match AppStore com.dailypro.shooter'"
    )
    
    # Upload to TestFlight
    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: true,
      app_identifier: "com.dailypro.shooter"
    )
  end
  
  desc "Sync code signing certificates and profiles"
  lane :sync_signing do
    match(
      type: "appstore",
      app_identifier: "com.dailypro.shooter",
      readonly: false
    )
  end
end
